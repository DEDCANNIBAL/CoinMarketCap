@{
    ViewData["Title"] = "Home Page";
}

@inject SignInManager<ApplicationUser> SignInManager

<div class="text-center">
    @if (SignInManager.IsSignedIn(User))
    {
        <h2>Cryptocurrency Quotes</h2>
        <table id="table"
               data-toggle="table"
               data-ajax="dataRequest"
               data-side-pagination="server"
               data-pagination="false">
            <thead>
                <tr>
                    <th data-field="logo" data-formatter="logoFormatter">Logo</th>
                    <th data-field="name">Name</th>
                    <th data-field="symbol">Symbol</th>
                    <th data-field="marketCap" data-formatter="priceFormatter">Market Cap</th>
                    <th data-field="price" data-formatter="priceFormatter">Price</th>
                    <th data-field="percentChange1h" data-formatter="percentChangeFormatter">% 1h</th>
                    <th data-field="percentChange24h" data-formatter="percentChangeFormatter">% 24h</th>
                    <th data-field="lastUpdated" data-formatter="dateFormatter">Last Updated</th>
                </tr>
            </thead>
        </table>
        <div id="toolbar">
            <button id="button" class="btn btn-secondary" style="margin-top:1%;">Load More</button>
        </div>
    }
    else
    {
        <h1 class="display-4">Welcome</h1>
    }
</div>

@section scripts{
    <script>
        let filters = {
            offset: 0,
            limit: 20
        };

        function dataRequest(params) {
            filters.offset = 0;
            getData()
                .then(function (res) {
                    params.success({ rows: res });
                });
        }

        $(document).ready(() => {
            $('#button').click(function () {
                getData()
                    .then(function (res) {
                        $('#table').bootstrapTable('append', res);
                    });
            })
        });

        function getData() {
            const url = '/api/Cryptocurrency/GetCryptocurrencyQuotes'
            const data = {
                offset: filters.offset,
                limit: filters.limit
            };

            filters.offset += filters.limit;

            return $.get(url, data);
        }

        const moneyFormatter = new Intl.NumberFormat('en-US', {
            style: 'currency',
            currency: 'USD',
        });

        function logoFormatter(value) {
            return `<img src=${value} alt="" width="32" height="32"/>`;
        }

        function priceFormatter(value) {
            return moneyFormatter.format(value);
        }

        function percentChangeFormatter(value) {
            return parseFloat(value).toFixed(2) + "%";
        }

        function dateFormatter(value) {
            return new Date(value).toUTCString();
        }
    </script>
}
